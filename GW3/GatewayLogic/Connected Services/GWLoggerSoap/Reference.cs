//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GatewayLogic.GWLoggerSoap {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageType", Namespace="http://gwlogger.psi.ch/")]
    [System.SerializableAttribute()]
    public partial class MessageType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayMaskField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string DisplayMask {
            get {
                return this.DisplayMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayMaskField, value) != true)) {
                    this.DisplayMaskField = value;
                    this.RaisePropertyChanged("DisplayMask");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdValue", Namespace="http://gwlogger.psi.ch/")]
    [System.SerializableAttribute()]
    public partial class IdValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogEntryDetail", Namespace="http://gwlogger.psi.ch/")]
    [System.SerializableAttribute()]
    public partial class LogEntryDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int TypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://gwlogger.psi.ch/", ConfigurationName="GWLoggerSoap.DataAccessSoap")]
    public interface DataAccessSoap {
        
        // CODEGEN: Generating message contract since element name types from namespace http://gwlogger.psi.ch/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://gwlogger.psi.ch/RegisterLogMessageType", ReplyAction="*")]
        GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeResponse RegisterLogMessageType(GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gwlogger.psi.ch/RegisterLogMessageType", ReplyAction="*")]
        System.Threading.Tasks.Task<GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeResponse> RegisterLogMessageTypeAsync(GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequest request);
        
        // CODEGEN: Generating message contract since element name types from namespace http://gwlogger.psi.ch/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://gwlogger.psi.ch/RegisterLogMessageDetailType", ReplyAction="*")]
        GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeResponse RegisterLogMessageDetailType(GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gwlogger.psi.ch/RegisterLogMessageDetailType", ReplyAction="*")]
        System.Threading.Tasks.Task<GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeResponse> RegisterLogMessageDetailTypeAsync(GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequest request);
        
        // CODEGEN: Generating message contract since element name gateway from namespace http://gwlogger.psi.ch/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://gwlogger.psi.ch/LogEntry", ReplyAction="*")]
        GatewayLogic.GWLoggerSoap.LogEntryResponse LogEntry(GatewayLogic.GWLoggerSoap.LogEntryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://gwlogger.psi.ch/LogEntry", ReplyAction="*")]
        System.Threading.Tasks.Task<GatewayLogic.GWLoggerSoap.LogEntryResponse> LogEntryAsync(GatewayLogic.GWLoggerSoap.LogEntryRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RegisterLogMessageTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RegisterLogMessageType", Namespace="http://gwlogger.psi.ch/", Order=0)]
        public GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequestBody Body;
        
        public RegisterLogMessageTypeRequest() {
        }
        
        public RegisterLogMessageTypeRequest(GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://gwlogger.psi.ch/")]
    public partial class RegisterLogMessageTypeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public GatewayLogic.GWLoggerSoap.MessageType[] types;
        
        public RegisterLogMessageTypeRequestBody() {
        }
        
        public RegisterLogMessageTypeRequestBody(GatewayLogic.GWLoggerSoap.MessageType[] types) {
            this.types = types;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RegisterLogMessageTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RegisterLogMessageTypeResponse", Namespace="http://gwlogger.psi.ch/", Order=0)]
        public GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeResponseBody Body;
        
        public RegisterLogMessageTypeResponse() {
        }
        
        public RegisterLogMessageTypeResponse(GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class RegisterLogMessageTypeResponseBody {
        
        public RegisterLogMessageTypeResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RegisterLogMessageDetailTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RegisterLogMessageDetailType", Namespace="http://gwlogger.psi.ch/", Order=0)]
        public GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequestBody Body;
        
        public RegisterLogMessageDetailTypeRequest() {
        }
        
        public RegisterLogMessageDetailTypeRequest(GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://gwlogger.psi.ch/")]
    public partial class RegisterLogMessageDetailTypeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public GatewayLogic.GWLoggerSoap.IdValue[] types;
        
        public RegisterLogMessageDetailTypeRequestBody() {
        }
        
        public RegisterLogMessageDetailTypeRequestBody(GatewayLogic.GWLoggerSoap.IdValue[] types) {
            this.types = types;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RegisterLogMessageDetailTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RegisterLogMessageDetailTypeResponse", Namespace="http://gwlogger.psi.ch/", Order=0)]
        public GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeResponseBody Body;
        
        public RegisterLogMessageDetailTypeResponse() {
        }
        
        public RegisterLogMessageDetailTypeResponse(GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class RegisterLogMessageDetailTypeResponseBody {
        
        public RegisterLogMessageDetailTypeResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogEntryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogEntry", Namespace="http://gwlogger.psi.ch/", Order=0)]
        public GatewayLogic.GWLoggerSoap.LogEntryRequestBody Body;
        
        public LogEntryRequest() {
        }
        
        public LogEntryRequest(GatewayLogic.GWLoggerSoap.LogEntryRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://gwlogger.psi.ch/")]
    public partial class LogEntryRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string gateway;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string remoteIpPoint;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int messageType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public GatewayLogic.GWLoggerSoap.LogEntryDetail[] details;
        
        public LogEntryRequestBody() {
        }
        
        public LogEntryRequestBody(string gateway, string remoteIpPoint, int messageType, GatewayLogic.GWLoggerSoap.LogEntryDetail[] details) {
            this.gateway = gateway;
            this.remoteIpPoint = remoteIpPoint;
            this.messageType = messageType;
            this.details = details;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogEntryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogEntryResponse", Namespace="http://gwlogger.psi.ch/", Order=0)]
        public GatewayLogic.GWLoggerSoap.LogEntryResponseBody Body;
        
        public LogEntryResponse() {
        }
        
        public LogEntryResponse(GatewayLogic.GWLoggerSoap.LogEntryResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class LogEntryResponseBody {
        
        public LogEntryResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DataAccessSoapChannel : GatewayLogic.GWLoggerSoap.DataAccessSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataAccessSoapClient : System.ServiceModel.ClientBase<GatewayLogic.GWLoggerSoap.DataAccessSoap>, GatewayLogic.GWLoggerSoap.DataAccessSoap {
        
        public DataAccessSoapClient() {
        }
        
        public DataAccessSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataAccessSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeResponse GatewayLogic.GWLoggerSoap.DataAccessSoap.RegisterLogMessageType(GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequest request) {
            return base.Channel.RegisterLogMessageType(request);
        }
        
        public void RegisterLogMessageType(GatewayLogic.GWLoggerSoap.MessageType[] types) {
            GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequest inValue = new GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequest();
            inValue.Body = new GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequestBody();
            inValue.Body.types = types;
            GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeResponse retVal = ((GatewayLogic.GWLoggerSoap.DataAccessSoap)(this)).RegisterLogMessageType(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeResponse> GatewayLogic.GWLoggerSoap.DataAccessSoap.RegisterLogMessageTypeAsync(GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequest request) {
            return base.Channel.RegisterLogMessageTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeResponse> RegisterLogMessageTypeAsync(GatewayLogic.GWLoggerSoap.MessageType[] types) {
            GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequest inValue = new GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequest();
            inValue.Body = new GatewayLogic.GWLoggerSoap.RegisterLogMessageTypeRequestBody();
            inValue.Body.types = types;
            return ((GatewayLogic.GWLoggerSoap.DataAccessSoap)(this)).RegisterLogMessageTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeResponse GatewayLogic.GWLoggerSoap.DataAccessSoap.RegisterLogMessageDetailType(GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequest request) {
            return base.Channel.RegisterLogMessageDetailType(request);
        }
        
        public void RegisterLogMessageDetailType(GatewayLogic.GWLoggerSoap.IdValue[] types) {
            GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequest inValue = new GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequest();
            inValue.Body = new GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequestBody();
            inValue.Body.types = types;
            GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeResponse retVal = ((GatewayLogic.GWLoggerSoap.DataAccessSoap)(this)).RegisterLogMessageDetailType(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeResponse> GatewayLogic.GWLoggerSoap.DataAccessSoap.RegisterLogMessageDetailTypeAsync(GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequest request) {
            return base.Channel.RegisterLogMessageDetailTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeResponse> RegisterLogMessageDetailTypeAsync(GatewayLogic.GWLoggerSoap.IdValue[] types) {
            GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequest inValue = new GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequest();
            inValue.Body = new GatewayLogic.GWLoggerSoap.RegisterLogMessageDetailTypeRequestBody();
            inValue.Body.types = types;
            return ((GatewayLogic.GWLoggerSoap.DataAccessSoap)(this)).RegisterLogMessageDetailTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GatewayLogic.GWLoggerSoap.LogEntryResponse GatewayLogic.GWLoggerSoap.DataAccessSoap.LogEntry(GatewayLogic.GWLoggerSoap.LogEntryRequest request) {
            return base.Channel.LogEntry(request);
        }
        
        public void LogEntry(string gateway, string remoteIpPoint, int messageType, GatewayLogic.GWLoggerSoap.LogEntryDetail[] details) {
            GatewayLogic.GWLoggerSoap.LogEntryRequest inValue = new GatewayLogic.GWLoggerSoap.LogEntryRequest();
            inValue.Body = new GatewayLogic.GWLoggerSoap.LogEntryRequestBody();
            inValue.Body.gateway = gateway;
            inValue.Body.remoteIpPoint = remoteIpPoint;
            inValue.Body.messageType = messageType;
            inValue.Body.details = details;
            GatewayLogic.GWLoggerSoap.LogEntryResponse retVal = ((GatewayLogic.GWLoggerSoap.DataAccessSoap)(this)).LogEntry(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GatewayLogic.GWLoggerSoap.LogEntryResponse> GatewayLogic.GWLoggerSoap.DataAccessSoap.LogEntryAsync(GatewayLogic.GWLoggerSoap.LogEntryRequest request) {
            return base.Channel.LogEntryAsync(request);
        }
        
        public System.Threading.Tasks.Task<GatewayLogic.GWLoggerSoap.LogEntryResponse> LogEntryAsync(string gateway, string remoteIpPoint, int messageType, GatewayLogic.GWLoggerSoap.LogEntryDetail[] details) {
            GatewayLogic.GWLoggerSoap.LogEntryRequest inValue = new GatewayLogic.GWLoggerSoap.LogEntryRequest();
            inValue.Body = new GatewayLogic.GWLoggerSoap.LogEntryRequestBody();
            inValue.Body.gateway = gateway;
            inValue.Body.remoteIpPoint = remoteIpPoint;
            inValue.Body.messageType = messageType;
            inValue.Body.details = details;
            return ((GatewayLogic.GWLoggerSoap.DataAccessSoap)(this)).LogEntryAsync(inValue);
        }
    }
}
